[{"path":"http://paul.melloy.com.au/cercospoRa/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c)(CC--SA-4.0) 2024 cercospoRa authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. Creative Commons Attribution-ShareAlike 4.0 International Public License SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/articles/Getting-started.html","id":"setup-and-requirements","dir":"Articles","previous_headings":"","what":"Setup and Requirements","title":"Getting-started","text":"cercospoRa package estimates daily infection values tracks progress towards Cercospora beticola epidemic sugar beet. package requires formatted hourly weather data format model recognises.","code":"library(cercospoRa) library(data.table)"},{"path":"http://paul.melloy.com.au/cercospoRa/articles/Getting-started.html","id":"format-weather-station-data","dir":"Articles","previous_headings":"Setup and Requirements","what":"Format weather station data","title":"Getting-started","text":"Included package weather data set station adjacent sugar beet field trial. weather data first cleaned format model can use without returning errors due inconsistencies NAs, common weather data. require user think replace NAs state default values complete data set. Now can use format_weather() function.","code":"# classify to data.table wthr <- data.table(weathr)  # Use POSIXct formatted time. wthr[,Time := as.POSIXct(paste0(Datum, \" \",Stunde,\":00\"),tz = \"UTC\")]  # Nominate Latitude and Longitude location of the weather station.  # While not needed in cercospoRa some plant disease models will use location to  #  decide the closest weather station to pull weather from wthr[, c(\"lon\",\"lat\") := list(9.916,51.41866)]  # weather is hourly and will error if we don't specify a standard deviation of  #  weather direction. This is intentional to force the user to decide how variable #  the wind direction data could be. wthr[, wd_std := 20]  # remove all data after September as it contains missing data wthr <- wthr[Datum < as.POSIXct(\"2022-10-01\")]  # set NA wind speed values to zero wthr[is.na(WG200), WG200 := 0]  # set NA wind direction values to 20 degrees.  #  Wind is not important for this model wthr[is.na(WR200),WR200 := 20] #> Warning in `[.data.table`(wthr, is.na(WR200), `:=`(WR200, 20)): 20.000000 (type #> 'double') at RHS position 1 taken as TRUE when assigning to type 'logical' #> (column 10 named 'WR200') wthr <- format_weather(wthr,                          POSIXct_time = \"Time\",                          time_zone = \"UTC\",                          temp = \"T200\",                          rain = \"N100\",                          rh = \"F200\",                          wd = \"WR200\",                          ws = \"WG200\",                          station = \"Station\",                          lon = \"lon\",                          lat = \"lat\",                          wd_sd = \"wd_std\",                          data_check = FALSE # this stops the function from checking for faults                          ) # As the data is formatted closely enough for what is expected for the model.  # We can elect to turn the data_check off so"},{"path":"http://paul.melloy.com.au/cercospoRa/articles/Getting-started.html","id":"calculate-epidemic-onset","dir":"Articles","previous_headings":"","what":"Calculate epidemic onset","title":"Getting-started","text":"following function calculates earliest date cercospora leaf spot epidemic commence. start end provide time window model run. Canopy closure (c_closure) indicates model start point model. due observation Wolf canopy closure pr date determined negative prognosis models last day epidemic likely start.","code":"cercospoRa::calc_epidemic_onset(start = as.POSIXct(\"2022-04-25\",tz = \"UTC\"),                     end = as.POSIXct(\"2022-09-30\",tz = \"UTC\"),                     c_closure = as.POSIXct(\"2022-07-01\",tz = \"UTC\"),                     weather = wthr) #> [1] \"2022-07-17 UTC\""},{"path":"http://paul.melloy.com.au/cercospoRa/articles/Getting-started.html","id":"estimate-canopy-closure","dir":"Articles","previous_headings":"","what":"Estimate canopy closure","title":"Getting-started","text":"Canopy closure traditionally observed manually. following methods permits canopy closure date estimation remotely sensed data. UAV satellite data can used produce georeferenced leaf area index (LAI) rasters. next function calculates sugar beet growth rate. Calculate canopy closure uses logistic regression estimate canopy closure date raster cell. Finally can use specialised wrapper function calculate earliest possible onset cercospora leaf spot epidemic chemical intervention might needed. plot heterogeneity onset date  Convert numeric date back POSIXct format","code":"# Get file location of example rasters with LAI values image_files <- list.files(system.file(\"extdata\", \"uav_img\",package = \"cercospoRa\"),                           pattern = \"tif\",                           full.names = TRUE)  # Read in data and check for consistency   epidemic_onset_param <-   read_sb_growth_parameter(img_files = image_files,                            img_dates = as.POSIXct(c(\"2022-06-14\",\"2022-06-28\"),                                                   tz = \"UTC\"),                            target_res = 10)  epidemic_onset_param #> class       : SpatRaster  #> dimensions  : 17, 29, 2  (nrow, ncol, nlyr) #> resolution  : 0.0001103147, 6.885404e-05  (x, y) #> extent      : 9.915826, 9.919025, 51.49783, 51.499  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> names       : 2022-06-14, 2022-06-28  #> min values  :  0.5216454,  0.8607956  #> max values  :  2.9568495,  3.3260000 param_rxt <- calc_r_x0(epidemic_onset_param,                       min_r = 0.02,                       max_r = 0.05,                       k = 6) canopy_closure <- calc_c_closure(param_rxt,                                  x1 = 1.3,                                  k=6) epidemic_onset_map <-    calc_epidemic_onset_from_image(start =as.POSIXct(\"2022-04-25\",tz = \"UTC\"),                                  end = as.POSIXct(\"2022-09-30\",tz = \"UTC\"),                                  c_closure = canopy_closure,                                  weather = wthr) epidemic_onset_map #> class       : SpatRaster  #> dimensions  : 17, 29, 1  (nrow, ncol, nlyr) #> resolution  : 0.0001103147, 6.885404e-05  (x, y) #> extent      : 9.915826, 9.919025, 51.49783, 51.499  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> name        :      lyr.1  #> min value   : 1653350400  #> max value   : 1659312000 terra::plot(epidemic_onset_map) as.POSIXct(terra::values(epidemic_onset_map)[120:130],            tz = \"UTC\",            origin = \"1970-01-01\") #>  [1] \"2022-07-22 UTC\" \"2022-07-22 UTC\" \"2022-07-22 UTC\" \"2022-07-21 UTC\" #>  [5] \"2022-07-14 UTC\" \"2022-07-14 UTC\" \"2022-07-09 UTC\" \"2022-07-08 UTC\" #>  [9] \"2022-07-09 UTC\" \"2022-07-11 UTC\" \"2022-07-11 UTC\""},{"path":"http://paul.melloy.com.au/cercospoRa/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Melloy. Author, maintainer, translator, copyright holder.            Translated equations literature developed package. Rene Heim. Author, copyright holder.            Code review development leaf area index model Nathan Okole. Author, contributor, copyright holder.            Code review development leaf area index model Facundo Ramón Ispizua Yamati. Data contributor, contributor.            Code review Anne-Katrin Mahlein. Contributor, copyright holder.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Melloy P, Heim R, Okole N (2024). cercospoRa: Process Based Epidemiological Model Cercospora Leaf Spot Sugar Beet. R package version 0.0.1, https://github.com/PaulMelloy/cercospoRa, http://paul.melloy.com.au/cercospoRa/, https://paul.melloy.com.au/cercospoRa/.","code":"@Manual{,   title = {cercospoRa: Process Based Epidemiological Model for Cercospora Leaf Spot of Sugar Beet},   author = {Paul Melloy and Rene Heim and Nathan Okole},   year = {2024},   note = {R package version 0.0.1, https://github.com/PaulMelloy/cercospoRa, http://paul.melloy.com.au/cercospoRa/},   url = {https://paul.melloy.com.au/cercospoRa/}, }"},{"path":"http://paul.melloy.com.au/cercospoRa/index.html","id":"cercospora","dir":"","previous_headings":"","what":"Process Based Epidemiological Model for Cercospora Leaf Spot of Sugar Beet","title":"Process Based Epidemiological Model for Cercospora Leaf Spot of Sugar Beet","text":"R package, cercospoRa, takes steps automate epidemiological modelling Cercospora leaf spot epidemics Cercospora beticola sugar beet farms, available R package. package contains functions use remotely sensed spatially explicit empirical data estimate leaf area index (LAI) crop canopy closes. Crop canopy closure key variable modelling estimating growers need vigilant protect crop fungicides prevent yield limiting Cercospora leaf spot epidemic. cercospoRa uses functions described Wolf Verreet (2005) “Factors Affecting Onset Cercospora Leaf Spot Epidemics Sugar Beet Establishment Disease-Monitoring Thresholds” Phytopathology","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Process Based Epidemiological Model for Cercospora Leaf Spot of Sugar Beet","text":"Install package github repository","code":"remotes::install_github(repo = \"PaulMelloy/cercospoRa\")"},{"path":[]},{"path":"http://paul.melloy.com.au/cercospoRa/index.html","id":"format-weather-data","dir":"","previous_headings":"Getting started","what":"Format weather data","title":"Process Based Epidemiological Model for Cercospora Leaf Spot of Sugar Beet","text":"weathr data.table containing weather data recorded sugar beet field trial observing spread severity C. beticola.","code":"library(data.table) library(cercospoRa)  # Inspect raw weather station data head(cercospoRa::weathr) # make a copy of the data wthr <- data.table(weathr)  # Format times to POSIXct time with UTC timezone wthr[,Time := as.POSIXct(paste0(Datum, \" \",Stunde,\":00\"),tz = \"UTC\")]  # Nominate Latitude and Longitude location of the weather station.  # While not needed in cercospoRa some plant disease models will use location to  #  decide the closest weather station to pull weather from wthr[, c(\"lon\",\"lat\") := list(9.916,51.41866)]  # weather is hourly and will error if we don't specify a standard deviation of  #  weather direction. This is intentional to force the user to decide how variable #  the wind direction data could be. wthr[, wd_std := 20]  # remove all data after September as it contains missing data wthr <- wthr[Datum < as.POSIXct(\"2022-10-01\")]  # set NA wind speed values to zero wthr[is.na(WG200),WG200 := 0]  # set NA wind direction values to 20 degrees. Wind is not important for this model wthr[is.na(WR200),WR200 := 20]  # format_weather() formats weather data to  #  hourly and checks for missing data or any issues that may cause downstream faults #  in the model. wthr <-    format_weather(wthr,                       POSIXct_time = \"Time\",                       time_zone = \"UTC\",                       temp = \"T200\",                       rain = \"N100\",                       rh = \"F200\",                       wd = \"WR200\",                       ws = \"WG200\",                       station = \"Station\",                       lon = \"lon\",                       lat = \"lat\",                       wd_sd = \"wd_std\",                       data_check = FALSE # this stops the function from checking for faults                       )"},{"path":"http://paul.melloy.com.au/cercospoRa/index.html","id":"calculate-the-proportional-progress-towards-an-epidemic","dir":"","previous_headings":"Getting started","what":"Calculate the proportional progress towards an epidemic","title":"Process Based Epidemiological Model for Cercospora Leaf Spot of Sugar Beet","text":"returns POSIXct date onset epidemic susceptible resistant cultivar. input weather data provide window epidemic onset date met, proportional progress towards epidemic returned. calc_epidemic_onset() wrapper calc_DIV() returns data.table detailing daily contribution towards “daily infection values” (Wolf Verreet, 2005). detailed output daily infection values call calc_DIV()","code":"# susceptible cultivar calc_epidemic_onset(c_closure = as.POSIXct(\"2022-07-01\"),                     weather = wthr,                     cultivar_sus = 3) # resistant cultivar                     calc_epidemic_onset(c_closure = as.POSIXct(\"2022-07-01\"),                     weather = wthr,                     cultivar_sus = 5)"},{"path":"http://paul.melloy.com.au/cercospoRa/index.html","id":"calculate-daily-infection-values","dir":"","previous_headings":"Getting started","what":"Calculate daily infection values","title":"Process Based Epidemiological Model for Cercospora Leaf Spot of Sugar Beet","text":"produces data.table detailing daily infection value day using method described Wolf Verreet (2005). Note: Missing humidity values prevent model running days assumed progress model. Racca Jörg model returns NA values Wolf model returns 0.","code":"calc_DIV(dat = wthr)"},{"path":"http://paul.melloy.com.au/cercospoRa/index.html","id":"notes-for-contributors","dir":"","previous_headings":"","what":"Notes for contributors","title":"Process Based Epidemiological Model for Cercospora Leaf Spot of Sugar Beet","text":"main branch production branch provides functions recreate model described Wolf Verreet (2005) explained paper. main branch locked, please contribute dev branch. plus_racca (development) branch also includes functions recreate C. beticola mechanistic models published Racca Jörg (2007) auxiliary functions might helpful future versions.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Process Based Epidemiological Model for Cercospora Leaf Spot of Sugar Beet","text":"Wolf, P. F., & Verreet, J. . (2005). Factors Affecting Onset Cercospora Leaf Spot Epidemics Sugar Beet Establishment Disease-Monitoring Thresholds. Phytopathology, 95(3), 269-274. Racca, P., Jörg, E. (2007). CERCBET 3 – forecaster epidemic development Cercospora beticola. EPPO Bulletin, 37(2), 344-349.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_DIV.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate daily infection values — calc_DIV","title":"Calculate daily infection values — calc_DIV","text":"function calculates daily infection values Cercospora beticola sugar beet. Functions adapted Wolf Verreet (2005) Wolf et al (2001)","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_DIV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate daily infection values — calc_DIV","text":"","code":"calc_DIV(date_time, Tm, RH, rain, dat)"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_DIV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate daily infection values — calc_DIV","text":"date_time POSIX_ct, date time weather recording taken Tm numeric, temperature, Celsius' time increment date_time RH numeric, relative humidity (%) time increment date_time rain numeric, volume rain millimetres recorded time recordings dat data.frame, containing column names \"times\",\"temp\",\"rh\",\"rain\" respective arguments input. provided convenience","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_DIV.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate daily infection values — calc_DIV","text":"data.table, probability infection day, 0 1 Undertaken two methods Wolf Verreet (2005)","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_DIV.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate daily infection values — calc_DIV","text":"Wolf, P. F. J., J. . Verreet. “Factors Affecting Onset Cercospora Leaf Spot Epidemics Sugar Beet Establishment Disease-Monitoring Thresholds.” Phytopathology® 95, . 3 (March 2005): 269–74. https://doi.org/10.1094/PHYTO-95-0269. Wolf, P. F. J., M. Heindl, J. . Verreet. “Influence Sugar Beet Leaf Mass Development Predisposition Crop Cercospora Beticola (Sacc.).” Journal Plant Diseases Protection 108, . 6 (2001): 578–92.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_DIV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate daily infection values — calc_DIV","text":"","code":"date_t <- Sys.time() + seq(0, 179 * 60 * 10, (60 * 10)) Tm <- rnorm(180,20,10) RH <- runif(180,min = 40,90) rain <- rbinom(180,1,0.1) * runif(180,0.1,20)  DIV1 <- calc_DIV( date_time = date_t, Tm = Tm, RH = RH, rain = rain )"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_c_closure.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate canopy closure date — calc_c_closure","title":"Calculate canopy closure date — calc_c_closure","text":"Calculate canopy closure date","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_c_closure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate canopy closure date — calc_c_closure","text":"","code":"calc_c_closure(param_rxt, x1 = 1.3, k = 6)"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_c_closure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate canopy closure date — calc_c_closure","text":"param_rxt Output function calc_r_x0, produces list containing parameters necessary calculate c_closure. parameters r, growth rate, x0, initial LAI value, t0, initial date associated dates x1 LAI value 90% canopy closure reached. fixed 1.3 sugar beet. k carrying capacity, maximum LAI can attained. value can cultivar-dependent. default fixed 6","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_c_closure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate canopy closure date — calc_c_closure","text":"c_closure date 90% canopy closure reached location.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_c_closure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate canopy closure date — calc_c_closure","text":"Calculates canopy closure dates LAI growth rate parameters","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_c_closure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate canopy closure date — calc_c_closure","text":"","code":"img_dir <- system.file(\"extdata\", \"uav_img\",package = \"cercospoRa\") epidemic_onset_param <-   read_sb_growth_parameter(img_files = list.files(img_dir,pattern = \"tif\",                                                   full.names = TRUE),                            img_dates = as.POSIXct(                              c(\"2022-06-14\",\"2022-06-28\"),tz = \"UTC\"),                            target_res = 10) param_rxt <- calc_r_x0(epidemic_onset_param,                        min_r = 0.02,                        max_r = 0.05,                        k = 6) c_closure <- calc_c_closure(param_rxt,                             x1 = 1.3,                             k=6 )"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_epidemic_onset.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate epidemic onset — calc_epidemic_onset","title":"Calculate epidemic onset — calc_epidemic_onset","text":"Calculate epidemic onset","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_epidemic_onset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate epidemic onset — calc_epidemic_onset","text":"","code":"calc_epidemic_onset(start, end, c_closure, weather, cultivar_sus = 5)"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_epidemic_onset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate epidemic onset — calc_epidemic_onset","text":"start POSIXct, start date begin calculating epidemic onset, specified, first date weather data used. end POSIXct, end date, last date complete calculating epidemic onset, specified, last date weather data used. c_closure POSIXct formatted date start model running model usually canopy closure (Wolf) weather data.table, formatted format_weather cultivar_sus character, susceptibility cultivar \"R\" resistant, \"S\" susceptible, \"MR\" moderately resistant etc.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_epidemic_onset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate epidemic onset — calc_epidemic_onset","text":"input weather conducive epidemic, function returns POSIX_ct date epidemic commences. epidemic occurs, numeric, proportion indicating progress epidemic returned","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_epidemic_onset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate epidemic onset — calc_epidemic_onset","text":"","code":"wethr <- read.csv(system.file(\"extdata\", \"clean_weather.csv\",                   package = \"cercospoRa\")) wethr <- format_weather(wethr,time_zone = \"UTC\")  calc_epidemic_onset(start = as.POSIXct(\"2022-04-25\",tz = \"UTC\"),                     end = as.POSIXct(\"2022-09-30\",tz = \"UTC\"),                     c_closure = as.POSIXct(\"2022-07-01\",tz = \"UTC\"),                     weather = wethr) #> [1] \"2022-07-17 UTC\""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_epidemic_onset_from_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate epidemic onset from image — calc_epidemic_onset_from_image","title":"Calculate epidemic onset from image — calc_epidemic_onset_from_image","text":"Calculate epidemic onset image","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_epidemic_onset_from_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate epidemic onset from image — calc_epidemic_onset_from_image","text":"","code":"calc_epidemic_onset_from_image(   start,   end,   c_closure,   weather,   cultivar_sus = 5 )"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_epidemic_onset_from_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate epidemic onset from image — calc_epidemic_onset_from_image","text":"start POSIXct, start date begin calculating epidemic onset, specified, first date weather data used. end POSIXct, end date, last date complete calculating epidemic onset, specified, last date weather data used. c_closure map canopy closure dates formatted number days since 1970-01-01. defines date start running model (Wolf) weather data.table, formatted format_weather cultivar_sus character, susceptibility cultivar \"R\" resistant, \"S\" susceptible, \"MR\" moderately resistant etc.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_epidemic_onset_from_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate epidemic onset from image — calc_epidemic_onset_from_image","text":"input weather conducive epidemic, function returns POSIX_ct date epidemic commences. epidemic occurs, numeric, proportion indicating progress epidemic returned","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_epidemic_onset_from_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate epidemic onset from image — calc_epidemic_onset_from_image","text":"","code":"wethr <- read.csv(system.file(\"extdata\", \"clean_weather.csv\",                   package = \"cercospoRa\")) wethr <- format_weather(wethr,time_zone = \"UTC\")  img_dir <- system.file(\"extdata\", \"uav_img\",package = \"cercospoRa\")  epidemic_onset_param <-    read_sb_growth_parameter(       list.files(img_dir,pattern = \"tif\",                  full.names = TRUE),       img_dates = as.POSIXct(c(\"2022-06-14\",\"2022-06-28\"),                              tz = \"UTC\"),       10) param_rxt <- calc_r_x0(epidemic_onset_param,                        min_r = 0.02,                        max_r = 0.05,                        k = 6) c_closure <- calc_c_closure(param_rxt,                             x1 = 1.3,                             k=6 )  # this takes about 20 sec to run epidemic_onset_map <- calc_epidemic_onset_from_image(start = as.POSIXct(\"2022-04-25\",tz = \"UTC\"),                                                      end = as.POSIXct(\"2022-09-30\",tz = \"UTC\"),                                                      c_closure = c_closure,                                                      weather = wethr)  terra::plot(epidemic_onset_map)"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_r_x0.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate growth rate and LAI at t0 — calc_r_x0","title":"Calculate growth rate and LAI at t0 — calc_r_x0","text":"Calculate growth rate LAI t0","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_r_x0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate growth rate and LAI at t0 — calc_r_x0","text":"","code":"calc_r_x0(param_r, min_r = 0.02, max_r = 0.05, k = 6)"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_r_x0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate growth rate and LAI at t0 — calc_r_x0","text":"param_r Output function read_sb_growth_parameter, produces list containing LAI images associated dates min_r minimum growth rate sugar beet. Default min_r fixed 0.02 ensure growth rate inflection point sigmoid least 1 unit LAI per month. max_r maximum growth rate sugar beet. Default max_r fixed 0.05 ensure growth rate inflection point sigmoid 2.5 units LAI per month. k carrying capacity, maximum LAI can attained. value can cultivar-dependent. default fixed 6","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_r_x0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate growth rate and LAI at t0 — calc_r_x0","text":"param_rxt: list containing parameters necessary calculate c_closure. parameters r, growth rate, x0, initial LAI value, t0, initial date.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_r_x0.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate growth rate and LAI at t0 — calc_r_x0","text":"Fits non-linear model remotely sensed LAI values estimates leaf area index (LAI) growth rate r start time window t0.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/calc_r_x0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate growth rate and LAI at t0 — calc_r_x0","text":"","code":"img_dir <- system.file(\"extdata\", \"uav_img\",package = \"cercospoRa\") epidemic_onset_param <-   read_sb_growth_parameter(img_files = list.files(img_dir,pattern = \"tif\",                                                   full.names = TRUE),                            img_dates = as.POSIXct(                              c(\"2022-06-14\",\"2022-06-28\"),tz = \"UTC\"),                            target_res = 10) param_rxt <- calc_r_x0(epidemic_onset_param,                        min_r = 0.02,                        max_r = 0.05,                        k = 6)"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/format_weather.html","id":null,"dir":"Reference","previous_headings":"","what":"Format weather data into a standardised format. — format_weather","title":"Format weather data into a standardised format. — format_weather","text":"Formats raw weather data object suitable use affiliated spore dispersal packages ascotraceR blackspot.sp. standardised data format ensures supplied weather data meet requirements functions aforementioned packages. Input weather data expects 'long' data format, line observation point time.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/format_weather.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format weather data into a standardised format. — format_weather","text":"","code":"format_weather(   w,   YYYY = NULL,   MM = NULL,   DD = NULL,   hh = NULL,   mm = NULL,   ss = NULL,   POSIXct_time = NULL,   time_zone = NULL,   temp,   rain,   rh,   ws,   wd,   wd_sd,   station,   lon = NULL,   lat = NULL,   lonlat_file = NULL,   data_check = TRUE )"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/format_weather.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format weather data into a standardised format. — format_weather","text":"w data.frame object weather station data formatting. YYYY Column name character index w refers year weather logged. MM Column name character index w refers month (numerical) weather logged. DD Column name character index w refers day month weather logged. hh Column name character index w refers hour (24 hour) weather logged. mm Column name character index w refers minute weather logged. ss Column name character index w refers second weather logged. POSIXct_time Column name character index w contains POSIXct formatted time. can used instead arguments YYYY, MM, DD, hh, mm.. time_zone Time zone (Olsen time zone format) character weather station located. May column supplied character string. Optional, see also r. See details. temp Column name character index x refers temperature degrees Celsius. rain Column name character index w refers rainfall millimetres. rh Column name character index w refers relative humidity percentage. ws Column name character index w refers wind speed km / h. wd Column name character index w refers wind direction degrees. wd_sd Column name character index w refers wind speed columns standard deviation.  applicable weather data already summarised hourly increments. See details. station Column name character index w refers weather station name identifier. See details. lon Column name character index w refers weather station's longitude. See details. lat Column name character index w refers weather station's latitude. See details. lonlat_file file path (character) CSV included station name/id longitude latitude coordinates supplied data. Optional, see also lon lat. data_check TRUE, checks NA values 'rain', 'temp', 'rh', 'wd' 'ws' data values unlikely. Use character vector variable names, (wither 'rain', 'temp', 'rh', 'wd' 'ws') check data specific variables. FALSE ignores variables cause subsequent models using data fail.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/format_weather.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format weather data into a standardised format. — format_weather","text":"epiphy.weather object (extension data.table) containing supplied weather aggregated hour suitable format use disease models. Depending input weather, classes given output object indicate models meets data requirements . columns returned follows:","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/format_weather.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format weather data into a standardised format. — format_weather","text":"time_zone time-zone time recorded. weather stations w must fall within time-zone.  required stations located differing time zones, format_weather() run separately object, data can combined formatting. wd_sd weather data provided hourly increments, column standard deviation wind direction hour required provided. weather data sub-hourly, standard deviation calculated returned automatically. lon, lat lonlat_file w provides longitude latitude values station locations, may specified lon lat columns.  coordinates relevant study location NA can specified function drop column variables.  data included, (NULL) separate file may provided contains longitude, latitude matching station name provide station locations final epiphy.weather object created specifying file path CSV file using lonlat_file.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/format_weather.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format weather data into a standardised format. — format_weather","text":"","code":"# load the weather data to be formatted weather_station_data <-    read.csv(system.file(\"extdata\",                         \"scaddan_weather.csv\",                         package = \"cercospoRa\")) weather_station_data$Local.Time <-    as.POSIXct(weather_station_data$Local.Time, format = \"%Y-%m-%d %H:%M:%S\",               tz = \"UTC\")  weather <- format_weather(    w = weather_station_data,    POSIXct_time = \"Local.Time\",    ws = \"meanWindSpeeds\",    wd_sd = \"stdDevWindDirections\",    rain = \"Rainfall\",    temp = \"Temperature\",    wd = \"meanWindDirections\",    lon = \"Station.Longitude\",    lat = \"Station.Latitude\",    station = \"StationID\",    time_zone = \"UTC\" ) #> Warning: All relative humidity values are 'NA' or missing, check data if this is not intentional  # Reformat saved weather  # Create file path and save data file_path_name <- paste(tempdir(), \"weather_saved.csv\", sep = \"\\\\\") write.csv(weather, file = file_path_name,           row.names = FALSE)  # Read data back in to weather2 <- read.csv(file_path_name, stringsAsFactors = FALSE)  # reformat the data to have appropriate column classes and data class weather2 <- format_weather(weather2,                            time_zone = \"UTC\") #> Warning: All relative humidity values are 'NA' or missing, check data if this is not intentional unlink(file_path_name) # remove temporary weather file"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/latent_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cercospora Latent Period — latent_period","title":"Calculate Cercospora Latent Period — latent_period","text":"Calculate Cercospora Latent Period","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/latent_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cercospora Latent Period — latent_period","text":"","code":"latent_period(Tm, ref = \"wolf\")"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/latent_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cercospora Latent Period — latent_period","text":"Tm numeric, Average temperature degrees Celsius hour day ref character, method calculating latent period. Default \"wolf\" also available \"jarroudi\". See references formulas used","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/latent_period.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cercospora Latent Period — latent_period","text":"numeric, Latent period given hour. ref = \"jarroudi\" returns latent period days.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/latent_period.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Cercospora Latent Period — latent_period","text":"Calculates latent period Cercospora beticola infections sugar beet. Note published formula Wolf Verreet (2005) contains error exponent. e(0.35 x (Tm - 10)) e(-0.35 x (Tm - 10)). See issue #22 Github additional information.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/latent_period.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Cercospora Latent Period — latent_period","text":"Wolf, P. F. J., J. . Verreet. “Factors Affecting Onset Cercospora Leaf Spot Epidemics Sugar Beet Establishment Disease-Monitoring Thresholds.” Phytopathology® 95, . 3 (March 2005): 269–74. https://doi.org/10.1094/PHYTO-95-0269. El Jarroudi, Moussa, Fadia Chairi, Louis Kouadio, Kathleen Antoons, Abdoul-Hamid Mohamed Sallah, Xavier Fettweis. “Weather-Based Predictive Modeling Cercospora Beticola Infection Events Sugar Beet Belgium.” Journal Fungi 7, . 9 (September 18, 2021): 777. https://doi.org/10.3390/jof7090777.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/read_sb_growth_parameter.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LAI images at several time points — read_sb_growth_parameter","title":"Read LAI images at several time points — read_sb_growth_parameter","text":"Read LAI images several time points","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/read_sb_growth_parameter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LAI images at several time points — read_sb_growth_parameter","text":"","code":"read_sb_growth_parameter(img_files, img_dates, target_res)"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/read_sb_growth_parameter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LAI images at several time points — read_sb_growth_parameter","text":"img_files character vector providing file paths least two georeferenced images study location. Dates image capture need defined img_dates respectively. img_dates POSIXct vector dates corresponding images supplied img_files respectively. prevent timezone issues use UTC timezone tz = \"UTC\". target_res desired spatial resolution. target_res equal larger actual resolution images expressed meters.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/read_sb_growth_parameter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LAI images at several time points — read_sb_growth_parameter","text":"SpatRast layer input layer. layer contains named according img_dates. output SpatRast suitable input calc_r_x0()","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/read_sb_growth_parameter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LAI images at several time points — read_sb_growth_parameter","text":"","code":"epidemic_onset_param <-   read_sb_growth_parameter(img_files = list.files(system.file(\"extdata\", \"uav_img\",                                                               package = \"cercospoRa\"),                                                  pattern = \".tif\",                                                  full.names = TRUE),                            img_dates = as.POSIXct(c(\"2022-06-14\",                                                     \"2022-06-28\"),                                                   tz = \"UTC\"),                            target_res = 10)"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/temperature_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Get temperature index — temperature_index","title":"Get temperature index — temperature_index","text":"Temperature index proportional representation latent period. Temperatures optimum temperature disease cycle yield 1 lower temperature infinitely longer latent period.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/temperature_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get temperature index — temperature_index","text":"","code":"temperature_index(Tm, opt_Tm = 21)"},{"path":"http://paul.melloy.com.au/cercospoRa/reference/temperature_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get temperature index — temperature_index","text":"Tm numeric, temperature given hour opt_Tm numeric, lowest temperature optimum temperatures (fastest) latent period.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/temperature_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get temperature index — temperature_index","text":"numeric, proportion representing speed latent period relation temperature optimum","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/temperature_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get temperature index — temperature_index","text":"equations original documentation, see Wolf Verreet (2005) Wolf et al. (2001)","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/temperature_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get temperature index — temperature_index","text":"Wolf, P. F. J., J. . Verreet. “Factors Affecting Onset Cercospora Leaf Spot Epidemics Sugar Beet Establishment Disease-Monitoring Thresholds.” Phytopathology® 95, . 3 (March 2005): 269–74. https://doi.org/10.1094/PHYTO-95-0269. Wolf, P. F. J., F.-J. Weis, J.-. Verreet. “Threshold Values Indicators Fungicide Treatments Control Leaf Blotching Caused Cercospora Beticola (Sacc.) Sugar Beets.” Journal Plant Diseases Protection 108, . 3 (2001): 244–57.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/weathr.html","id":null,"dir":"Reference","previous_headings":"","what":"Weather station data — weathr","title":"Weather station data — weathr","text":"unformatted weather station dataset Germany","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/weathr.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Weather station data — weathr","text":"Climavi One + Climavi Soil, Agvolution GmbH, Gottingen, Germany data frame 8,016 rows 15 columns: Weather station accompanied field trial described cercospora manuscript Station Identifier Datum Date Stunde hour Minute minute T-005 Temperature degrees Celcius 5cm T-200 Temperature degrees Celcius 200cm T-020 Temperature degrees Celcius 20cm F-200 Percentage Relative humidity 200cm GS200 Global radiation (W/m2) 200cm WR200 Wind direction degrees 200cm N100 Precipitation (mm) 100cm WG200 Wind Speed (m/s) 200cm","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/reference/weathr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Weather station data — weathr","text":"Institute Sugar Beet Research - IFZ","code":""},{"path":[]},{"path":"http://paul.melloy.com.au/cercospoRa/news/index.html","id":"minor-improvements-0-0-1","dir":"Changelog","previous_headings":"","what":"minor improvements","title":"cercospoRa 0.0.1","text":"moved format_weather function cercospoRa package avoid epiphytoolR suggests problems CRAN. Moved ./ext data internal data testing reduce package size. weathr data attribution updated","code":""},{"path":[]},{"path":"http://paul.melloy.com.au/cercospoRa/news/index.html","id":"new-features-and-minor-improvements-0-0-0-9003","dir":"Changelog","previous_headings":"","what":"New Features and minor improvements","title":"cercospoRa 0.0.0.9003","text":"read_sb_growth_parameter: read format raster images allow computation. calc_r_x0: fit logistic growth curve date. calc_c_closure: deduct canopy closure dates fitted curves. calc_epidemic_onset_from_image: builds existing calc_epidemic_onset function compute value pixel. Example datasets provided check functions. consists folder containing two LAI maps computed UAV images.","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/news/index.html","id":"features-removed-0-0-0-9003","dir":"Changelog","previous_headings":"","what":"Features removed","title":"cercospoRa 0.0.0.9003","text":"Removed methods Racca paper set new branch plus_racca","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/news/index.html","id":"documentation-fixes-0-0-0-9003","dir":"Changelog","previous_headings":"","what":"Documentation fixes","title":"cercospoRa 0.0.0.9003","text":"add metadata simplification main dev branches Wolf Verreet functions. add badge spelling grammar fixes","code":""},{"path":"http://paul.melloy.com.au/cercospoRa/news/index.html","id":"cercospora-0009001","dir":"Changelog","previous_headings":"","what":"cercospoRa 0.0.0.9001","title":"cercospoRa 0.0.0.9001","text":"Change package name Add pkgdown site Reduce functions described Wolf Verreet (2005)","code":""}]
